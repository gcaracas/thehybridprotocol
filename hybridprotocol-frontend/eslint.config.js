import js from '@eslint/js';
import babelParser from '@babel/eslint-parser';

export default [
  js.configs.recommended,
  {
    files: ['**/*.{js,jsx,ts,tsx}'],
    ignores: [
      '.next/**',
      'node_modules/**',
      'coverage/**',
      'public/**',
      '*.config.js',
      '*.config.mjs'
    ],
    languageOptions: {
      ecmaVersion: 2020,
      sourceType: 'module',
      parser: babelParser,
      parserOptions: {
        requireConfigFile: false,
        babelOptions: {
          presets: ['@babel/preset-react']
        }
      },
      globals: {
        console: 'readonly',
        window: 'readonly',
        document: 'readonly',
        process: 'readonly',
        require: 'readonly',
        module: 'readonly',
        setTimeout: 'readonly',
        clearTimeout: 'readonly',
        setInterval: 'readonly',
        clearInterval: 'readonly',
        fetch: 'readonly',
        URL: 'readonly',
        URLSearchParams: 'readonly',
        Blob: 'readonly',
        FormData: 'readonly',
        FileReader: 'readonly',
        XMLHttpRequest: 'readonly',
        WebAssembly: 'readonly',
        navigator: 'readonly',
        location: 'readonly',
        self: 'readonly',
        global: 'readonly',
        btoa: 'readonly',
        importScripts: 'readonly',
        Bun: 'readonly',
        Deno: 'readonly',
        ActiveXObject: 'readonly',
        trustedTypes: 'readonly',
        AbortController: 'readonly',
        reportError: 'readonly',
        queueMicrotask: 'readonly',
        TURBOPACK_WORKER_LOCATION: 'readonly',
        __turbopack_module_context__: 'readonly',
        __turbopack_esm__: 'readonly',
        __turbopack_export_value__: 'readonly',
        __turbopack_export_namespace__: 'readonly',
        __turbopack_cache__: 'readonly',
        __turbopack_modules__: 'readonly',
        __turbopack_load__: 'readonly',
        __turbopack_dynamic__: 'readonly',
        __turbopack_resolve_absolute_path__: 'readonly',
        __turbopack_relative_url__: 'readonly',
        __turbopack_resolve_module_id_path__: 'readonly',
        __turbopack_worker_blob_url__: 'readonly',
        __turbopack_require_real__: 'readonly',
        __REACT_DEVTOOLS_GLOBAL_HOOK__: 'readonly',
        __dirname: 'readonly',
        exports: 'readonly',
        _N_E: 'readonly',
        __turbopack_load_page_chunks__: 'readonly',
        checkDCE: 'readonly',
        warnForMissingKey: 'readonly',
        shouldErrorImpl: 'readonly',
        shouldSuspendImpl: 'readonly',
        canDiffStyleForHydrationWarning: 'readonly',
        getFirstModuleChunk: 'readonly',
        instantiateRuntimeModule: 'readonly',
        RUNTIME_PUBLIC_PATH: 'readonly',
        OUTPUT_ROOT: 'readonly',
        _args: 'readonly',
        _moduleId: 'readonly',
        _callback: 'readonly',
        _errorHandler: 'readonly',
        _handler: 'readonly',
        sceneOffsetY: 'readonly',
        e$7: 'readonly',
        e: 'readonly',
        t: 'readonly',
        r: 'readonly',
        i: 'readonly',
        o: 'readonly',
        n: 'readonly',
        a: 'readonly',
        error: 'readonly'
      }
    },
    rules: {
      'no-unused-vars': 'warn',
      'no-undef': 'warn',
      'no-redeclare': 'warn',
      'no-func-assign': 'warn',
      'no-cond-assign': 'warn',
      'no-control-regex': 'warn',
      'no-empty': 'warn',
      'no-self-assign': 'warn',
      'no-constant-condition': 'warn',
      'no-useless-catch': 'warn',
      'no-useless-escape': 'warn',
      'no-prototype-builtins': 'warn'
    }
  }
]; 